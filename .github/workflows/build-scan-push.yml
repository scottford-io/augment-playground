name: Build → Smoke → Push (GHCR)

on:
  push:
    branches:
      - main
    paths:
      - Dockerfile
      - app.py
      - requirements.txt
      - templates/index.html
      - .github/workflows/build-scan-push.yml
  pull_request:
    paths:
      - Dockerfile
      - app.py
      - requirements.txt
      - templates/index.html
      - .github/workflows/build-scan-push.yml
  workflow_dispatch:

permissions:
  contents: read
  packages: write  # needed to push to ghcr.io
  id-token: write  # future-proofing (if you later use OIDC)

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}        # owner/repo
  # Customize the test command for your app; default is a no-op exit 0.
  SMOKE_TEST_CMD: "/bin/sh -c 'exit 0'"

jobs:
  build_scan_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      # --- Build the container (locally load so we can scan & run it) ---
      - name: Build image (load locally for scan & smoke)
        id: build_local
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          load: true                       # load image into docker engine
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Optional: show the local image list for debugging
      - name: List images
        run: docker images --digests

      # --- Determine a concrete tag for local image reference ---
      - name: Resolve image reference
        id: imgref
        run: |
          # Use the first tag from docker/metadata-action output (e.g., sha-3f1336a)
          first_tag="$(echo '${{ steps.meta.outputs.tags }}' | tr ' ' '\n' | head -n1)"
          echo "image_ref=${first_tag}" >> "$GITHUB_OUTPUT"

      # --- Get the exact image ID (for cnspec) ---
      - name: Get image ID
        id: imageid
        run: |
          IMAGE_ID=$(docker inspect --format='{{.Id}}' "${{ steps.imgref.outputs.image_ref }}")
          echo "id=$IMAGE_ID" >> "$GITHUB_OUTPUT"

      # Smoke deploy the container and require exit 0
      - name: Smoke run (must exit 0)
        run: |
          set -euo pipefail
          docker run --rm "${{ steps.imgref.outputs.image_ref }}" ${{ env.SMOKE_TEST_CMD }}

      # --- Rebuild for push (or just push the already-built image) ---
      # We push using buildx for reproducibility and to attach labels/metadata.
      # If you prefer to re-use the local image, you can 'docker push' tags directly.
      - name: Build & Push to GHCR
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Output image digest
        run: echo "Pushed digest ${{ steps.build_local.outputs.digest || 'see build&push logs' }}"
